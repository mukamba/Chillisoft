@model DisplayMeeting

@{
    ViewData["Title"] = "Meeting Details";
}

<h2 style="font-weight: bold; border: 2px solid black; padding: 5px; display: inline-block;">
    @Model.MeetingTypeDescription -( @Model.MeetingNumber) - @Model.Meeting_date_created.ToString("g")
</h2>
<div class="d-flex justify-content-between my-4">
    <div class="text-left">
        <p>
            <a href="@Url.Action("CreateMinuteItem", new { MeetingId = Model.MeetingId, meetingTypeDescription = Model.MeetingTypeDescription, meetingNumber = Model.MeetingNumber, meetingDateCreated = Model.Meeting_date_created })" class="btn btn-success">Create New Meeting Item</a>
        </p>
    </div>

    <div class="text-right">
        <button onclick="window.print();" class="btn btn-primary">Print Meeting Details</button>
    </div>
</div>
<br />
<br />

<div class="container">
    @if (Model.Minute_Item_Status_List != null && Model.Minute_Item_Status_List.Any())
    {
        // Filter the Minute_Item_Status_List to only include items that match the current MeetingId
        var filteredMinuteItemStatusList = Model.Minute_Item_Status_List
        .Where(mis => mis.MeetingId == Model.MeetingId)
        .ToList();

        @if (filteredMinuteItemStatusList.Any())
        {
            <table class="table" id="myTable">
                <thead>
                    <tr>
                        <th>Meeting Item</th>
                        <th>Comment</th>
                        <th>Action by</th>
                        <th>Status</th>
                        <th>Action Required</th>
                        <th>Due Date</th>
                        <th>Completed Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var minuteItemStatus in filteredMinuteItemStatusList)
                    {
                        var minuteItem = Model.Minutes_Item_List?.FirstOrDefault(m => m.MinutesItemID == minuteItemStatus.MinutesItemID);
                        var employeeDetails = Model.EmployeesList?.FirstOrDefault(x => x.EmployeeID == minuteItemStatus.EmployeeID);
                        var statusDetails = Model.StatusesList?.FirstOrDefault(x => x.StatusID == minuteItemStatus.StatusID);

                        <tr>
                            <td>
                                @if (minuteItem != null)
                                {
                                    <ul>
                                        <li>@minuteItem.Title</li>
                                    </ul>
                                }
                            </td>
                            <td>
                                @if (minuteItem != null)
                                {
                                    <ul>
                                        <li>@minuteItem.Description</li>
                                    </ul>
                                }
                                else
                                {
                                    <span>No description available</span>
                                }
                            </td>
                            <td>
                                @if (employeeDetails != null)
                                {
                                    <span>@employeeDetails.FirstName @employeeDetails.LastName</span>
                                }
                            </td>
                            <td>
                                @if (statusDetails != null)
                                {
                                    <ul>
                                        <li>@statusDetails.Description</li>
                                    </ul>
                                }
                                else
                                {
                                    <span>No Status available</span>
                                }
                            </td>
                            <td>@minuteItemStatus.Action</td>
                            <td>@minuteItemStatus.DueDate.ToString("g")</td>
                            <td>@(minuteItemStatus.CompletedDate.HasValue? minuteItemStatus.CompletedDate.Value.ToString("g") : "Not Completed")</td>
                            <td>
                                <a href="@Url.Action("EditMinuteItem", new { id = minuteItem?.MinutesItemID, MeetingId = Model.MeetingId, meetingTypeDescription = Model.MeetingTypeDescription, meetingNumber = Model.MeetingNumber, meetingDateCreated = Model.Meeting_date_created })" class="btn btn-primary" style="margin-right: 10px; display: inline-block;">Edit</a>

                               @*  <a href="@Url.Action("Delete", new { id = minuteItem?.MinutesItemID })" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this Minute Item?')" style="display: inline-block;">Delete</a> *@
                                <form action="@Url.Action("DeleteMeetingItem", new { id = minuteItem?.MinutesItemID, MeetingId = Model.MeetingId, meetingTypeDescription = Model.MeetingTypeDescription, meetingNumber = Model.MeetingNumber, meetingDateCreated = Model.Meeting_date_created })" method="post" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this Minute Item?')">Delete</button>
                                </form>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No minute item statuses available for this meeting.</p>
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Go to Meetings Page</a>
        }
    }
    else
    {
        <p>No minute item statuses available for this meeting.</p>
        <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Go to Meetings Page</a>
    }
</div>
